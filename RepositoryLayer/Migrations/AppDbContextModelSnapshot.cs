// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RepositoryLayer;

#nullable disable

namespace RepositoryLayer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoreLayer.Models.Boat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<bool>("Headlights")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("Boats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            Headlights = false,
                            Model = "Small"
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            Headlights = false,
                            Model = "Medium"
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 3,
                            Headlights = false,
                            Model = "Large"
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Bus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<bool>("Headlights")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            Headlights = false,
                            Model = "20 Person"
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            Headlights = false,
                            Model = "40 Person"
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 3,
                            Headlights = false,
                            Model = "50 Person"
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<bool>("Headlights")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("wheels")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ColorId = 1,
                            Headlights = false,
                            Model = "Ford",
                            wheels = false
                        },
                        new
                        {
                            Id = 2,
                            ColorId = 2,
                            Headlights = false,
                            Model = "Toyota",
                            wheels = false
                        },
                        new
                        {
                            Id = 3,
                            ColorId = 3,
                            Headlights = false,
                            Model = "Opel",
                            wheels = false
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Headlights")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Headlights = false,
                            Model = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Headlights = false,
                            Model = "Blue"
                        },
                        new
                        {
                            Id = 3,
                            Headlights = false,
                            Model = "White"
                        },
                        new
                        {
                            Id = 4,
                            Headlights = false,
                            Model = "Red"
                        });
                });

            modelBuilder.Entity("CoreLayer.Models.Boat", b =>
                {
                    b.HasOne("CoreLayer.Models.Color", "Color")
                        .WithMany("Boats")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CoreLayer.Models.Bus", b =>
                {
                    b.HasOne("CoreLayer.Models.Color", "Color")
                        .WithMany("Buses")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CoreLayer.Models.Car", b =>
                {
                    b.HasOne("CoreLayer.Models.Color", "Color")
                        .WithMany("Cars")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");
                });

            modelBuilder.Entity("CoreLayer.Models.Color", b =>
                {
                    b.Navigation("Boats");

                    b.Navigation("Buses");

                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
